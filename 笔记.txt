项目创建过程：


第十一个视频：
1.修改main.js 和App.vue文件中的代码，删除router.js中的路由和引入的html模块，删除view文件夹，去掉默认页面，便于我们开始开发

2.在components文件夹里新建Login.vue文件  Login.vue是一个单文件组件，由结构，样式，行为三部分组成

3.在router.js文件中添加login路由，并设置路由重定向

4.在Login.vue中写结构，样式   并在创建global.css文件，写全局样式  global.css创建成功后要在main.js中导入后才能生效。

5.创建白色盒子  并设置1其水平垂直居中对齐 插入头像图片 设置位置
 
6.引入element组件，生成登录输入框 element组件 引入后要在element.js中按需导入相应的组件，并注册为全局组件

7.添加字体图标 已步入第三方阿里图标库 复制文件夹 在main.js中引入css文件 在login.vue文件中给input添加字体图标所带的样式名

8.用v-model给用户输入框和密码框绑定值  并拷贝element方法添加校验

9.设置重置事件，设置登录事件  都是调用element方法  在登录成功发起请求前要配置axios包，并把它挂载到全局

10.判断登陆请求 发送请求用axios  用element中的message弹框消息组件实现登录提示 失败或成功

11.把登录成功后的 token(令牌)， 保存到客户端的 sessionStorage 中  并通过编程式导航跳转到后台页面,创建 home后台首页，并在router.js文件中导入home路由

12. 设置路由导航守卫 to将要访问的路径  from代表从哪个路径跳转来的 next是一个函数，表示放行 next（）放行 next（‘/login’）强制跳转
 
13。 在home.vue文件中设置退出按钮  先调用window方法清除token 在用编程式导航跳转到登录页
 
14. 上传到远程仓库






第二天笔记：

1.在home中用element组件添加头部等内容，在element.js中导入相应的组件，并注册为全局组件  添加背景色，设置组件路由，铺满全屏

2. 给header部分添加flex布局 左右分布，居中

3.左侧菜单布局 el-submenu组件嵌套ei-menu-item组件 裁剪出一级和二级导航栏

4.通过axios 请求拦截器为除登录意外的请求添加添加token，保证有获取数据的权限

5.发送ajax请求，获取左侧菜单的数据

6.把数据渲染到页面

7.更改导航栏签的字体图标

8。设置展开规则，一次只允许展开一个，去除el-menu的右侧边框线

9.添加折叠按钮 根据isCollapse的值为true或者false来判断是否折叠侧边栏

10. 创建welcome.vue单文件组件，在router。js中添加welcome.veu的路由，并挂载为home组件的子组件 设置路由重定向，/home跳转到 /welcome

11. 设置侧边栏二级导航的路由改造，首先给el-menu 侧边栏菜单区域添加router属性开启路由模式，然后以index属性作为url实现跳转

12.创建user.vue单文件组件，添加路由，并设置为home的子组件

13.保持二级导航的高亮状态，保存二级导航的激活状态 存在sessionStorage中 在home组件刚刷新出来时在从sessionStorage中取出

14.引用element ui的面包屑导航 卡片 input 栅格系统，创建用户列表首页和卡片区域 

15.发送请求 获取用户列表数据

16.通过element ui 表格，被数据渲染到页面

17.通过作用域插槽的方法状态栏的开关状态

18.添加修改 删除 角色分配按钮 

19.实现分页功能

20. 监听switch开关的change事件 发送请求保存switch的开关状态

21.给搜索框进行数据双向绑定，button按钮添加点击事件调用用户查询事件来查询用户

22.搜索功能优化 添加clearable 和@clear

23.点击用户按钮 添加对话框 对话框是element ui组件，通过点击用户按钮来改变true 或 false 来控制对话框的显示隐藏

24.给表单进行属性绑定 添加验证规则

25.给取消按钮添加close表单重置事件





第三天
1.添加修改用户对话框

2.点击修改按钮 获取用户id，根据id发送请求查询用户信息 在data中添加对象保存查询到的用户信息，添加到修改用户对话框中 添加验证规则

3.修改用户对话框的取消按钮事件 

4.修改表单的预验证

5. 发送请求 修改用户信息

6.引入询问弹框   发送请求删除用户 

7.创建 rights子分支

8.新建rights.vue单文件组件，并在router.js文件中导入，挂载

9. 导入element中的面包屑导航和卡片      不同element ui组件之间要有div包裹

10. 将获取到的数据渲染到页面 

11.创建rolrs.vue单文件组件

12.发送请求获取角色列表的数据   渲染

13. 自行解决角色的增加，删除，修改

14.渲染角色的一级权限  在展开列里添加作用域插槽，采用栅格系统布局，用for循环遍历scope.row.children 把得到的一级权限item1.authName渲染到页面中

15.给表格添加边框线 间距  渲染二级权限，三级权限  美化：给html添加最小宽度，给各级权限表格设置居中对齐 

商品参数页面：
1.添加params.vue页面

2.用el-alert组件渲染首行的提示信息

3.用el-row 和 el-col包裹span和级联选择框 让他们处于一行  通过判断this.selectedCateKeys.length !==3 限制用户只能选择第三级分类

4.用el-tabs组件渲染动态参数和静态属性这两个页签，添加计算属性computed，通过判断this.selectedCateKeys.length !==3 来返回true或false，并动态绑定到el-tabs中来决定按钮的禁用状态

5.创建获取参数列表getparamsData函数 选中的是三级分类后  根据所选择分类的id 和当前所处的面板 获取对应的请求参数，发送请求，获取参数列表，并分别在级联选择框值改变的函数 和 面板按钮改变的函数里 调用此函数

6.添加动态和静态的form表单 把数据渲染到页面中

7.验证 发送请求 刷新列表
    addParams(){
      this.$refs.addFormRef.validate(async valid=>{
        if(!valid) return

        const {data:res} = await this.$http.post(`categories/${this.cateId}/attributes`,{
          attr_name:this.addForm.attr_name,
          attr_sel:this.activeName
        })
        if(res.meta.status !==201){
          return this.$message.error('添加失败')
        }
        this.addDialogVisible = false
        this.getParamsList()
      })
    }

8.用for-each循环和作用域插槽添加参数标签

9.用Tag动态编辑标签添加 添加参数标签的按钮
 // 点击参加参数按钮事件
    showInput(row) {
      // 这个要放在this.$nextTick前面，否则this.$nextTick不起作用
      row.inputVisible = true
      // 切换为文本框是自动获取焦点  this.$nextTick这个事件会在页面被重新渲染时触发
      this.$nextTick(_ => {
        // this.$refs.saveTagInput.$refs.input 获取到这个input框
        this.$refs.saveTagInput.$refs.input.focus()
      });
      
      row.inputValue = ''
    }

10.添加参数 发送请求 把添加的参数保留到数据库中  

11.删除参数 发送请求 把删除参数购的状态保留到数据库中  

12.推送good_params分支 新建good_list分支

13.新建list.vue文件  添加静态页面 发送请求渲染商品列表页面

14.添加提示信息 进度条 tab栏 进度条需要在element.js中进行挂载

15.把进度条和tab栏同步  给tab栏添加namehev-model属性 并绑定到进度条的activeIndex上  字符串 - 0  可转化为数字

16.添加商品分类级联选择框 并限制只能选择三级分类

17.在tab栏切换前检测知否选择三级分类 若无 阻止切换
















表单重置方法： 
1.找到表单的引用对象 this.$refs.addCateFormRef   即ref后缀的名称
 
2.调用内置的表单重置方法 this.$refs.addCateFormRef.resetFields()


删除方法：
1.添加点击事件 新增对应的函数，并利用作用域插槽传值  scope.row.id

2.添加确定删除弹框 在确定后发送删除请求，检测是否删除成功，成功后调用函数刷新列表



第四天：
1.创建Cate.vue文件，添加路由 挂载到全局
2.渲染页面 面包屑导航 卡片视图  
3.安装运行依赖  在mine.j中引入 挂载 
4.运用tree-table 渲染商品分类列表


